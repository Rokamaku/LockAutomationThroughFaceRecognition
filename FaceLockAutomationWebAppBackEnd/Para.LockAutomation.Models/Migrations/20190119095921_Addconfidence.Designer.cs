// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Para.LockAutomation.Models;

namespace Para.LockAutomation.Models.Migrations
{
    [DbContext(typeof(LockAutomationDbContext))]
    [Migration("20190119095921_Addconfidence")]
    partial class Addconfidence
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Para.LockAutomation.Models.FaceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("File");

                    b.Property<Guid>("ObjectId");

                    b.Property<int>("PersonId");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("face");
                });

            modelBuilder.Entity("Para.LockAutomation.Models.FaceLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Confidences");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("FaceRectangles");

                    b.Property<string>("File");

                    b.Property<Guid>("ObjectId");

                    b.Property<int>("PersonGroupId");

                    b.Property<string>("Persons");

                    b.HasKey("Id");

                    b.HasIndex("PersonGroupId");

                    b.ToTable("faceLog");
                });

            modelBuilder.Entity("Para.LockAutomation.Models.PersonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<Guid>("ObjectId");

                    b.Property<int>("PersonGroupId");

                    b.HasKey("Id");

                    b.HasIndex("PersonGroupId");

                    b.ToTable("person");
                });

            modelBuilder.Entity("Para.LockAutomation.Models.PersonGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ConfindenceThreshold");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<bool>("IsDefault");

                    b.Property<string>("Name");

                    b.Property<Guid>("ObjectId");

                    b.Property<int>("TrainingStatus");

                    b.HasKey("Id");

                    b.ToTable("personGroup");
                });

            modelBuilder.Entity("Para.LockAutomation.Models.FaceEntity", b =>
                {
                    b.HasOne("Para.LockAutomation.Models.PersonEntity", "Person")
                        .WithMany("Faces")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Para.LockAutomation.Models.FaceLogEntity", b =>
                {
                    b.HasOne("Para.LockAutomation.Models.PersonGroupEntity", "PersonGroup")
                        .WithMany()
                        .HasForeignKey("PersonGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Para.LockAutomation.Models.PersonEntity", b =>
                {
                    b.HasOne("Para.LockAutomation.Models.PersonGroupEntity", "PersonGroup")
                        .WithMany("Persons")
                        .HasForeignKey("PersonGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
